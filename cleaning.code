import pandas as pd
import os

# Define file paths
input_file = 'taylor_swift_data_from_kaggle.csv'
output_file = 'cleaned_taylor_swift_spotify.csv'

# Verify the file exists
if not os.path.isfile(input_file):
    raise FileNotFoundError(f"error: '{input_file}' not fond. Check the flie path.")

# Load dataset
spotify_data = pd.read_csv(input_file)

# Standardize column names
spotify_data.columns = [col.strip().lower() for col in spotify_data.columns]

# Trim whitespace for specific text columns
for column in ['name', 'album']:
    if column in spotify_data.columns:
        spotify_data[column] = spotify_data[column].astype(str).str.strip()

# Convert specific columns to numeric, handling errors gracefully
num_cols = ['acousticness', 'instrumentalness', 'liveness', 'popularity', 'duration_ms']
for column in num_cols:
    if column in spotify_data.columns:
        spotify_data[column] = pd.to_numeric(spotify_data[column], errors='coerce')

# Ensure 'track_number' is an integer if it exists
if 'track_number' in spotify_data.columns:
    spotify_data['track_number'] = pd.to_numeric(spotify_data['track_number'], errors='coerce').fillna(0).astype(int)

# Convert duration from milliseconds to minutes if applicable
if 'duration_ms' in spotify_data.columns:
    spotify_data['duration_minutes'] = spotify_data['duration_ms'] / 60000

# Remove duplicate rows
spotify_data = spotify_data.drop_duplicates()

# Show preview of cleaned data
print("Preview of cleaned data:")
print(spotify_data.head())

# Save cleaned data
spotify_data.to_csv(output_file, index=False)
print(f"data succesfuly cleaned and saved to '{output_file}'")
